https://yenbook.tistory.com/29

--1번
SELECT 
    NAME, HIRE_DATE
FROM
    EMPLOYEE_FOLDER
WHERE
    HIRE_DATE LIKE ('06%');
    
--2번
SELECT
    NAME, JOB
FROM 
    EMPLOYEE_FOLDER
WHERE
    MANAGER IS NULL;
    

--3번
SELECT
    NAME, JOB, MANAGER
FROM
    EMPLOYEE_FOLDER
WHERE
    MANAGER IS NOT NULL;

    
--4번
SELECT
    NAME, SALARY*12 AS ANNSAL, COMMITION
FROM
    EMPLOYEE_FOLDER
WHERE
    COMMITION IS NOT NULL
ORDER BY
    SALARY*12 DESC;

--5번
SELECT
    NAME
FROM 
    EMPLOYEE_FOLDER
WHERE
    NAME LIKE '___a%';


--6번
SELECT
    NAME
FROM
    EMPLOYEE_FOLDER
WHERE
    NAME LIKE ('%a%') AND 
    NAME LIKE ('%e%');
    

--7번
SELECT
    NAME, SALALY, JOB
FROM
    EMPLOYEE_FOLDER
WHERE
    SALALY NOT IN ('2500','3500','7000') AND 
    JOB IN ('SA_REP','ST-CLERK');
    
    
--8번
SELECT
    DISTINCT JOB
FROM
    EMPLOYEE_FOLDER
WHERE
    DEPARTMENT_NUM IN (30,90)
ORDER BY
    JOB ASC;
    
--9번
SELECT
    E.NAME, D.DEPARTMENT_NAME, D.DEPARTMENT_NUM
FROM
    EMPLOYEE_FORLER E, DEPARTMENT_FOLDER D
WHERE
    E.DEPARTMENT_NUM = D.DEPARTMENT_NUM;


--10번
SELECT
    E.NAME, D.DEPARTMENT_NAME, L.LOCATION_NAME, L.CITY
FROM
    EMPLOYEE_FOLDER E, DEPARTMENT_FOLDER D, LOCATION_FOLDER L
WHERE
    E.DEPARTMENT_NAME = D.DEPARTMENT_NAME AND
    E.COMMISION IS NOT NULL;
    
    
--11번
SELECT
    E.NAME, E.HIRE_DATE
FROM
    EMPLOYEE_FOLDER E, MANAGER_FOLDER M
WHERE
    E.MANAGER_NUM = M.MANAGER_NUM AND
    E.HIRE_DATE < M.HIRE_DATE
    
    
--12번
SELECT
    MAX(SALALY), MIN(SALALY),SUM(SALALY),AVG(SALYLY)
FROM
    EMPLOYEE_FOLDER
    
    
--13번
SELECT
    JOB, MAX(SALALY)MAX , MIN(SALALY) MIN, SUM(SALALY) SUM, AVG(SALALY) AVG
FROM
    EMPLOYEE_FOLDER
GROUP BY 
    JOB
ORDER BY 
    JOB ASC;
    
--14번
SELECT
    JOB, COUNT(EMPLOYEE_ID)
FROM
    EMPLOYEE_FOLDER
GROUP BY
    JOB
ORDER BY
    JOB ASC;
    
    
--15번
SELECT
    COUNT(DISTINCT MANAGER_ID)
FROM
    MANAGER_FOLDER;
    
    
--16번
SELECT
    MAX(SALALY)-MIN(SALALY)
FROM
    EMPLOYEE_FOLDER;


--17번
SELECT
    E.MANAGER_ID, MIN(SALALY)
FROM
    EMPLOYEE_FOLDER E
WHERE
    MANAGER_ID IS NOT NULL
GROUP BY
    E.MANAGER_ID
HAVING BY
    MIN(SALALY) >= 5000
ORDER BY
    MIN(SALALY) DESC;
    
    
    
--18번.????
--부서명, 부서위치ID, 각 부서별 사원 총 수, 각 부서 별 평균 급여를 출력하되, 
--부서위치를 오름차순 출력한다.
SELECT
    D.DEPARTMENT_NAME, D.LOCATION_ID, COUNT(E.EMPLOYEE_ID), AVG(E.SALALY) AVG
FROM
    DEPARTMENT_FOLDER D, EMPLOYEE_FOLDER E
WHERE
    D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY
    D.DEPARTMENT_NAME, D.LOCATION_ID
ORDER BY
    D.LOCATION_ID ASC;
    

--19번
SELECT
    EMPLOYEE_ID, HIRE_DATE
FROM
    EMPLOYEE_FOLDER
WHERE
    DEPARTMENT_ID IN (
    SELECT 
        DEPARTMENT_ID
    FROM
        EMPLOYEE_FOLDER
    WHERE
        EMPLOYEE_NAME = 'Zlotkey';
    );
    

--20번
SELECT
    EMPLOYEE_ID, EMPLOYEE_NAME
FROM
    EMPLOYEE_FOLDER
WHERE
    SALALY > (
    SELECT
        AVG(SALALY)
    FROM
        EMPLOYEE_FOLDER
    );


--21번
SELECT
    E.EMPLOYEE_ID, E.EMPLOYEE_NAME, E.SALALY, D.DEPARTMENT_NAME 
FROM
    EMPLOYEE_FOLDER E, DEPARTMENT_FOLDER D
WHERE
    E.DEPARTMENT_ID = D.DEPARTMENT_ID AND
    SALALY >= 2000
ORDER BY
    SALALY DESC;
    
    
--22번
SELECT
    E.EMPLOYEE_ID, E.EMPLOYEE_NAME, E.JOB, E.SALALY, D.DEPARTMENT_NAME 
FROM
    EMPLOYEE_FOLDER E, DEPARTMENT_FOLDER D
WHERE
    E.EMPLOYEE_ID = D.EMPLOYEE_ID AND
    E.JOB = 'MANAGER' AND
    E.SALALY >= 2500
ORDER BY
    EMPLOYEE_ID DESC;